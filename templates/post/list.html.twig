{% extends 'base.html.twig' %}

{% block stylesheets %} <link rel="stylesheet" href="{{ asset('css/list_post.css') }}"> {% endblock %}

{% block title %}
{% if category == "all" %}Tous les posts{% else %}{{category}}{% endif %}
{% endblock %}

{% block body %}

<div class="sort_select_group">
  <label for="exampleSelect1">Trier par</label>
  <form method="post" id="order_by">
    <select class="sort_select" name="orderBy" id="sort_by">
      <div>
        <option class="select_option" value="dateDesc">Les plus récent</option>
        <option class="select_option" value="dateAsc">Les plus anciens</option>
        <option class="select_option" value="statusOpen">Status ouvert</option>
        <option class="select_option" value="statusClose">Status fermé</option>
        <option class="select_option" value="titleAsc">Par titre (A à Z)</option>
        <option class="select_option" value="titleDesc">Par titre (Z à A)</option>
      </div>
    </select>
  </form>
</div>

<p class="out-of-results"> <span id="printed_posts">{{ posts|length }} </span> résultats sur {{ size }}</p>

<div id="posts_div" class="post-div"> 
  {% for post in posts %}
    <div class="post-box">
      <div class="top-post-box">
        <h1 class="title">Sujet : {{post.title}}</h1>
        <span class="badge-info">
          {% if post.status == 0 %}  
            {{ " ouvert"}}
          {% else %}
            {{" fermé"}}
          {% endif %} 
        </span>
      </div>
      <hr class="my-4">
      <p class="time-box">{{ post.author.firstName ~ ' ' ~ post.author.lastName ~ ' (le ' ~ post.creationDate | date('d/m/Y') ~ " à " ~ post.creationDate | date('H:i') ~ ')' }}</p>
      <a class="btn-read" href="{{path('show_post', {id:post.id}) }}" role="button">Lire le post</a>
    </div>
  {% endfor %}
  {% if more == true %}
  <div class="div-show-more">
    <a href="{{path('list_posts', {startAt:posts|length,onlyPost:"true",orderBy:orderBy,categoryName:categoryName})}}" id="show_more" class="btn-show-more">Afficher plus</a>
  </div>
  {% endif %}
</div>

{% endblock %}

{% block javascripts %}
  <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
  <script>

  console.log("debug");
  const printedPosts = document.getElementById("printed_posts");
  var printedPostsCount = 3;
  const maxPrintedPostCount = {{size}};
  
  function onClickShowMoreBtn(){
    const btn = this;
    event.preventDefault();
    console.log('onClickShowMoreBtn');
    const url = this.href;
    btn.remove();
    axios.get(url).then(function(response){
      var newDiv = document.createElement("div");
      newDiv.innerHTML = response.data;
      document.getElementById("posts_div").appendChild(newDiv);
      showMore = document.getElementById("show_more");
      if(showMore != null){
        showMore.addEventListener('click',onClickShowMoreBtn);
      }
      printedPostsCount +=3;
      if(printedPostsCount > maxPrintedPostCount){
        printedPostsCount = maxPrintedPostCount;
      }
      printedPosts.innerHTML = printedPostsCount; 
    });
  }

  function onSubmitOrderBySelect(event){
    event.preventDefault();
    console.log("onSubmitOrderByForm function");
    const url = `/post/list/0/{{category}}/${this.value}/true`;
    console.log(url);
    const postDiv = document.getElementById("posts_div");
    postDiv.style.opacity = "30%";
    axios.get(url).then(function(response){
      postDiv.style.opacity = "100%";
      postDiv.innerHTML = response.data;
      showMore = document.getElementById("show_more");
      if(showMore != null){
        showMore.addEventListener('click',onClickShowMoreBtn);
      }
      printedPosts.innerHTML = printedPostsCount; 
    });
  }
  showMore = document.getElementById("show_more");
  if(showMore != null){
    showMore.addEventListener('click',onClickShowMoreBtn);
  }
  document.getElementById("sort_by").addEventListener('change',onSubmitOrderBySelect);
  </script>
{% endblock %}